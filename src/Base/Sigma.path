module Base.Sigma

Sigma : âˆ€ A : Type . (A -> Type) -> Type
Sigma = \ A B . âˆ€ C : Type . ({ a : A } -> B a -> C) -> C

sigma :  { A : Type } -> { B : A -> Type } -> { a : A } -> B a -> Sigma A B
sigma = \ _ _ a b _ f . f a b

fst : { A : Type } -> { B : A -> Type } -> Sigma A B -> A
fst = \ A _ s . s A (\ a _ . a)
