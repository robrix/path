module Base.Either

Either : Type -> Type -> Type
Either = \ l r . { a : Type } -> (l -> a) -> (r -> a) -> a

left : l -> Either l r
left = \ l left _ . left l

right : r -> Either l r
right = \ r _ right . right r


map :  (r -> r')
    -> (Either l r -> Either l r')
map = \ f e . e left (\ r . right (f r))

bimap :  (       l   ->        l')
      -> (         r ->           r')
      -> (Either l r -> Either l' r')
bimap = \ f g e . e (\ l . left (f l)) (\ r . right (g r))
