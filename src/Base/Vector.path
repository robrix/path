module Base.Vector

import Base.Nat;

Vector
  : Nat -> Type -> Type
  = \ n a
    .  { x : Nat -> Type }
    -> x z
    -> ({ n : Nat } -> a -> x n -> x (s n))
    -> x n;

nil
  : { a : Type } -> Vector z a
  = \ {_} nil _ . nil;

cons
  : { n : Nat } -> { a : Type } -> a -> Vector n a -> Vector (s n) a
  = \ {_} {_} h t {x} nil cons . cons h (t {x} nil cons);
