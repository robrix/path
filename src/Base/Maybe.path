module Base.Maybe

import Base.Bool
import Base.Function

Maybe : Type -> Type
Maybe = \ a . { b : Type } -> b -> (a -> b) -> b

just : a -> Maybe a
just = \ a _ just . just a

nothing : Maybe a
nothing = \ nothing _ . nothing

isJust : Maybe a -> Bool
isJust = \ m . m false (\ _ . true)

map :  (a -> b)
    -> (Maybe a -> Maybe b)
map = \ f m . m nothing (\ a . just (f a))
